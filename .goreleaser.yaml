---
version: 2

# Before building anything, we need to ensure that go modules and generators are set up correctly
before:
  hooks:
    - go mod tidy
    - go generate ./...

# These are the final binaries, that we want to create
builds:
  # This first linux build also contains the defaults used for all other platforms
  - <<: &build_defaults
      binary: tuwat
      # The single main entrypoint binary for tuwat
      main: ./cmd/tuwat
      env:
        # We have no C dependencies
        - CGO_ENABLED=0
      # We want our builds to be reproducible, so we use the commit time as timestamps
      mod_timestamp: '{{ .CommitTimestamp }}'
      ldflags:
        - -s -w
        - -X {{.ModulePath}}/pkg/version.application={{.Binary}}
        - -X {{.ModulePath}}/pkg/version.version={{.Version}}
        - -X {{.ModulePath}}/pkg/version.revision={{.FullCommit}}
        - -X {{.ModulePath}}/pkg/version.branch={{.Branch}}
        - -X {{.ModulePath}}/pkg/version.releaseDate={{.Date}}
    id: linux
    goos:
      - linux
    goarch:
      - amd64
      - arm64
  - <<: *build_defaults
    id: darwin
    goos:
      - darwin
    goarch:
      - amd64
      - arm64

# For systems supporting universal binaries (hello Apple!) we ship a single binary
universal_binaries:
  - id: darwin
    ids:
      - darwin
    replace: true

# Configure how snapshots are versioned
snapshot:
  version_template: '{{ incpatch .Version }}-dev-{{ .ShortCommit }}'

# Configure what goes into the archives
archives:
  - <<:
      name_template: "{{ .Binary }}_{{ .Version }}_{{ .Os }}_{{ .Arch }}"
      # Additionally packaged files
      files:
        - LICENSE
        - README*
        - CHANGELOG*
        - config.example.toml
    id: nix
    ids: [ linux, darwin ]
    formats: [ 'tar.gz' ]

# config the checksum filename
# https://goreleaser.com/customization/checksum
checksum:
  name_template: "checksums.txt"

# create a source tarball
# https://goreleaser.com/customization/source/
source:
  enabled: true

# creates SBOMs of all archives and the source tarball using syft
# https://goreleaser.com/customization/sbom
# Two different sbom configurations need two different IDs
sboms:
  - id: archive
    artifacts: archive
  - id: source
    artifacts: source

# signs the checksum file
# all files (including the sboms) are included in the checksum, so we don't need to sign each one if we don't want to
# https://goreleaser.com/customization/sign
signs:
  - cmd: cosign
    certificate: "${artifact}.pem"
    args:
      - sign-blob
      - "--output-certificate=${certificate}"
      - "--output-signature=${signature}"
      - "${artifact}"
      - "--yes" # needed on cosign 2.0.0+
    artifacts: checksum
    output: true

dockers:
  - image_templates:
      - "synyx/tuwat:{{ .Version }}-amd64"
    use: buildx
    goos: linux
    goarch: amd64
    build_flag_templates:
      - "--pull"
      - "--label=org.opencontainers.image.created={{ .Date }}"
      - "--label=org.opencontainers.image.name={{ .ProjectName }}"
      - "--label=org.opencontainers.image.revision={{ .FullCommit }}"
      - "--label=org.opencontainers.image.version={{ .Version }}"
      - "--label=org.opencontainers.image.source={{ .GitURL }}"
      - "--platform=linux/amd64"
  - image_templates:
      - "synyx/tuwat:{{ .Version }}-arm64"
    use: buildx
    goos: linux
    goarch: arm64
    build_flag_templates:
      - "--pull"
      - "--label=org.opencontainers.image.created={{ .Date }}"
      - "--label=org.opencontainers.image.name={{ .ProjectName }}"
      - "--label=org.opencontainers.image.revision={{ .FullCommit }}"
      - "--label=org.opencontainers.image.version={{ .Version }}"
      - "--label=org.opencontainers.image.source={{ .GitURL }}"
      - "--platform=linux/arm64"

# signs our docker image
# https://goreleaser.com/customization/docker_sign
docker_signs:
  - cmd: cosign
    artifacts: images
    output: true
    args:
      - "sign"
      - "${artifact}"
      - "--yes" # needed on cosign 2.0.0+

docker_manifests:
  - name_template: 'synyx/tuwat:{{ .Version }}'
    image_templates:
      - 'synyx/tuwat:{{ .Version }}-amd64'
      - 'synyx/tuwat:{{ .Version }}-arm64'
  # We also move the latest when publishing new images
  - name_template: 'synyx/tuwat:latest'
    image_templates:
      - 'synyx/tuwat:{{ .Version }}-amd64'
      - 'synyx/tuwat:{{ .Version }}-arm64'

nfpms:
  - file_name_template: '{{ .ProjectName }}_{{ .Version }}_{{ .Arch }}'
    homepage: https://github.com/synyx/tuwat
    description: |-
      Simple, 0-dependencies, dashboard for Nagios/Alertmanager/GitLab...
    maintainer: Jonathan Buch <jbuch@synyx.de>
    license: BSD
    vendor: synyx
    formats:
      - deb
      - rpm
    bindir: /usr/bin
    section: utils
    contents:
      - src: ./LICENSE
        dst: /usr/share/doc/tuwat/copyright
        file_info:
          mode: 0644

# yaml-language-server: $schema=https://goreleaser.com/static/schema.json
# vim: set ts=2 sw=2 tw=0 fo=cnqoj
